{"is_source_file": true, "format": "TypeScript", "description": "This file contains API client functions for communicating with a backend server, including user authentication, prescription management, and verification features. It defines request wrappers, exports various functions for API endpoints, and uses TypeScript types for request/response data.", "external_files": ["./config", "./auth", "@/types"], "external_methods": ["requireApiBaseUrl", "getToken"], "published": ["apiLogin", "apiSignup", "apiLogout", "apiIssuePrescription", "apiGetMyPrescriptions", "apiVerifyPrescription"], "classes": [], "methods": [{"name": "async function request<T>( request", "description": "A generic asynchronous function for making HTTP requests with JSON parsing, authorization headers, and error handling.", "scope": "", "scopeKind": ""}, {"name": "export async function apiLogin(params: { apiLogin", "description": "Logs in a user with email, password, and role, returning user info and token.", "scope": "", "scopeKind": ""}, {"name": "export async function apiSignup(params: { apiSignup", "description": "Signs up a new user with name, email, password, and role, returning user info and token.", "scope": "", "scopeKind": ""}, {"name": "export async function apiLogout(): Promise<void> { apiLogout", "description": "Logs out the current user by calling the backend API.", "scope": "", "scopeKind": ""}, {"name": "export async function apiIssuePrescription(input: { apiIssuePrescription", "description": "Doctor issues a prescription for a patient with drug info and expiry, returning the created Prescription object.", "scope": "", "scopeKind": ""}, {"name": "export async function apiGetMyPrescriptions(params: { apiGetMyPrescriptions", "description": "Retrieves prescriptions associated with the logged-in user based on role and optional limit.", "scope": "", "scopeKind": ""}, {"name": "export async function apiVerifyPrescription(code: string): Promise<VerifyResult> { apiVerifyPrescription", "description": "Verifies a prescription code, returning verification results possibly with on-chain status.", "scope": "", "scopeKind": ""}], "calls": ["requireApiBaseUrl", "getToken", "fetch"], "search-terms": ["API client functions", "Prescription API", "auth", "verify", "typescript API"], "state": 2, "file_id": 12, "knowledge_revision": 66, "git_revision": "", "revision_history": [{"25": ""}, {"66": ""}], "ctags": [{"_type": "tag", "name": "apiGetMyPrescriptions", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiGetMyPrescriptions(params: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiIssuePrescription", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiIssuePrescription(input: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiLogin", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiLogin(params: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiLogout", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiLogout(): Promise<void> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiSignup", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiSignup(params: {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "apiVerifyPrescription", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^export async function apiVerifyPrescription(code: string): Promise<VerifyResult> {$/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "base", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const base = requireApiBaseUrl();$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "data", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^      const data = parse ? await res.json() : await res.text();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "detail", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^      const detail =$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "headers", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const headers: Record<string, string> = toRecord(options.headers);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "key", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^      for (const [key, value] of h) {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "msg", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^    let msg = `${res.status} ${res.statusText}`;$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "parse", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const parse = options.parseJson ?? true;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "path", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const url = `${base}${path.startsWith(\"\\/\") ? path : `\\/${path}`}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "qs", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const qs = new URLSearchParams();$/", "language": "TypeScript", "kind": "constant", "scope": "apiGetMyPrescriptions", "scopeKind": "function"}, {"_type": "tag", "name": "request", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^async function request<T>($/", "language": "TypeScript", "kind": "function"}, {"_type": "tag", "name": "res", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const res = await fetch(url, {$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "toRecord", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const toRecord = ($/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const token = getToken();$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "true", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const parse = options.parseJson ?? true;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^  const url = `${base}${path.startsWith(\"\\/\") ? path : `\\/${path}`}`;$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}, {"_type": "tag", "name": "value", "path": "/home/kavia/workspace/code-generation/medprescribe-verify-159699-159708/frontend_next_js/src/lib/api.ts", "pattern": "/^      for (const [key, value] of h) {$/", "language": "TypeScript", "kind": "constant", "scope": "request", "scopeKind": "function"}], "hash": "79f110f6b3a24a554117dcde230d5bde", "format-version": 4, "code-base-name": "frontend_next_js", "filename": "frontend_next_js/src/lib/api.ts", "fields": [{"name": "let msg = `${res.status} ${res.statusText}`;", "scope": "", "scopeKind": "", "description": "unavailable"}]}